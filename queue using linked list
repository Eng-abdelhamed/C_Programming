#include<iostream>
using namespace std;

struct node
{
  int data;
  node *next;
};

void enqueue(int value);      // function for enqueue for queue in linked list
void dequeue();
int peek();
void display();

node * front = NULL;
node * rear = NULL;

void enqueue(int value)
{
  node *new_node = new node;
  new_node->data = value;
  new_node->next = NULL; // Initialize the next pointer to NULL
  if(front == NULL)
  {
    rear = front = new_node;
  }
  else
  {
    rear->next = new_node;
    rear = new_node;
  }
}

void dequeue()
{
 if(front ==  NULL)
 {
  cout<<"The linked list is empty \n";
 }
 else if(front == rear)
 {
  node *ptr = front;
  front = rear = NULL;
  delete(ptr);
 }
 else
 {
  node *ptr = front;
  front = front->next;
  delete(ptr);
 }
}

int peek()
{
 if(front == NULL)
 {
  cout<<"The linked list is empty \n";
  return -1;
 }
 else
 {
  return front->data;
 }
}

void display()
{
   if(front == NULL)
   {
     cout<<"The linked list is empty \n";
   }
   else
   {
     node *current = front;
     while(current != NULL)
     {
       cout << current->data << " ";
       current = current->next;
     } 
   }
   cout << endl;
}

int main()
{
  enqueue(5);
  enqueue(6);
  enqueue(7);
  enqueue(8);
  enqueue(9);
  enqueue(10);

  int peak = peek();
  dequeue();
  display();
  cout << "The peak is: " << peak << endl;

  return 0;
}
